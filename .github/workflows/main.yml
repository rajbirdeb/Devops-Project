name: CI-CD with Security and Deployment

on:
  push:
    branches:
      - main
    paths:
      - '/*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # tfsec Security Scan for Terraform
    - name: Run tfsec (Terraform security scan)
      uses: aquasecurity/tfsec-action@v1.0.3
      with:
        working-directory: ./terraform

    # Docker Setup
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Docker Login
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Generate Version Tag
    - name: Set Docker Image Tag
      id: vars
      run: |
        VERSION=v$(date +"%Y%m%d%H%M%S")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Build Docker Image
    - name: Build Docker Image
      run: |
        docker build -t rajbir019/ci-cd:${{ env.VERSION }} .

    # Trivy Image Scan
    - name: Trivy Docker Image Scan
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: rajbir019/ci-cd:${{ env.VERSION }}
        format: table
        exit-code: '0'

    # Push Docker Image
    - name: Push Docker Image
      run: |
        docker push rajbir019/ci-cd:${{ env.VERSION }}

    # Update K8s Deployment Manifest
    - name: Update deployment image
      run: |
        sed -i "s|image: rajbir019/ci-cd:.*|image: rajbir019/ci-cd:${{ env.VERSION }}|g" deploy/deployment.yaml

    # Commit changes back to GitHub
    - name: Commit and Push Changes
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add deploy/deployment.yaml
        git commit -m "Updated image to ${{ env.VERSION }}"
        git push origin main || echo "No changes to commit"

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    # Update kubeconfig for EKS
    - name: Update kubeconfig
      run: aws eks --region ap-south-1 update-kubeconfig --name testing-cluster

    # Deploy to EKS
    - name: Apply Kubernetes Manifests
      run: |
        kubectl apply -f deploy/deployment.yaml
        kubectl apply -f deploy/svc.yaml
        kubectl apply -f deploy/mysealedsecret.yaml